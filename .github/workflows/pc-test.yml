# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Prisma Cloud CLI Test

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install prismacloud-cli -U

      - name: Check connectivity
        env:
          PC_SAAS_API_ENDPOINT: ${{ secrets.PC_SAAS_API_ENDPOINT }}
          PC_COMPUTE_API_ENDPOINT: ${{ secrets.PC_COMPUTE_API_ENDPOINT }}
          PC_ACCESS_KEY: ${{ secrets.PC_ACCESS_KEY }}
          PC_SECRET_KEY: ${{ secrets.PC_SECRET_KEY }}
        run: |
          pc -vv --config environment check

      - name: Check connectivity
        env:
          PC_SAAS_API_ENDPOINT: ${{ secrets.PC_SAAS_API_ENDPOINT }}
          PC_COMPUTE_API_ENDPOINT: ${{ secrets.PC_COMPUTE_API_ENDPOINT }}
          PC_ACCESS_KEY: ${{ secrets.PC_ACCESS_KEY }}
          PC_SECRET_KEY: ${{ secrets.PC_SECRET_KEY }}
        run: |
          pc -vv --config environment license
